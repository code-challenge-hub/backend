name: ci-cd-dev

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

permissions:
  checks: write # Check 권한
  pull-requests: write # Comment 권한
  id-token: write # This is required for requesting the JWT

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    env:
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      ENVIRONMENT: dev
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      # 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # Gradle 빌드
      - name: Execute Gradle build
        run: ./gradlew clean build
      # 테스트 리포트 등록
      - name: Publish Test report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          fail_on_failure: true
      # 환경 변수 쓰기
      - name: Create env file
        run: |
          echo "SPRING_PROFILES_ACTIVE=$ENVIRONMENT" > .env
          echo "MYSQL_DATASOURCE_URL=${{ secrets.MYSQL_DATASOURCE_URL }}" >> .env
          echo "MYSQL_DATASOURCE_USER=${{ secrets.MYSQL_DATASOURCE_USER }}" >> .env
          echo "MYSQL_DATASOURCE_PASSWORD=${{ secrets.MYSQL_DATASOURCE_PASSWORD }}" >> .env
          echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> .env
          cat .env
      - name: Zip application
        run: |
          zip -r ${{ secrets.ZIP_FILE_NAME }} appspec.yml build/libs/code-challenge-hub.jar scripts/ .env
      # AWS Credentials
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::590183807290:role/cd-role
          aws-region: ${{ secrets.AWS_REGION }}
      # Upload
      - name: Upload AWS S3
        run: |
          aws s3 cp ${{ secrets.ZIP_FILE_NAME }} s3://${{ secrets.BUCKET_NAME }}/
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment: dev
    env:
      ENVIRONMENT: dev
    steps:
      - name: AWS code deploy
        run: |
          aws deploy create-deployment \
            --application-name code-challenge-hub \
            --deployment-group-name $ENVIRONMENT \
            --s3-location bucket=${{ secrets.BUCKET_NAME }},key=${{ secrets.ZIP_FILE_NAME }},bundleType=zip \
            --region ${{ secrets.AWS_REGION }} \
            --description "code challenge hub app dev deploy"